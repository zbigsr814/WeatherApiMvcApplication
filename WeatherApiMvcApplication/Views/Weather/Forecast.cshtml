@using System.Globalization;
@model List<WebApiClient.IWeather>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Dodanie Chart.js -->




<nav class="navbar bg-body-tertiary">
	<div class="container-fluid">
		<form class="d-flex" role="search" method="get" asp-controller="Weather" asp-action="Forecast">
			<input class="form-control me-2" name="searchingText" type="search" placeholder="Search" aria-label="Search" />
			<button class="btn btn-outline-success" type="submit">Szukaj</button>
		</form>
	</div>
</nav>


@if (Model[0] != null)
{

    <h3>Prognoza dla miasta @Model[0].location.name</h3>
    <canvas id="temperatureChart" style="width:100%;max-width:1000px;max-height:300px"></canvas>
    
    @foreach (var dayItem in @Model[0].forecast.forecastday)
    {
	    <h2>Szczegółowe informacje pogodowe</h2>
	    foreach (var hourItem in dayItem.hour)
	    {
		    <div class="card mb-2" style="padding: 10px; border-radius: 10px; background-color: lightseagreen;">
			    <h5>@hourItem.time</h5>


			    @* <img src="@hourItem.condition.imagePath"
	    class="card-img-top"
	    alt="@hourItem.condition.text"
	    style="width: 64px; height: 64px; margin-right: 10px;"> <!-- Ustawiamy szerokość i wysokość --> *@

			    <a>
				    Stan pogody: @hourItem.condition.text <br>
				    Temperatura: @hourItem.temp_c °C <br>
                    Ilość opadów deszczu: @hourItem.precip_mm <br>
				    Zachmurzenie: @hourItem.cloud % <br>
				    Wilgotność: @hourItem.humidity % <br>
			    </a>
		    </div>

	    }
    }

	<script>
    var labels = [];
    var temperatures = [];
    var precip_mm = [];

    @foreach (var dayItem in @Model[0].forecast.forecastday)
    {
        @foreach (var hourItem in dayItem.hour)
        {

            <text>
                if ('@hourItem.time.ToString().Substring(11)' == '00:00') {
                    labels.push('@hourItem.time.ToString()');
                }
                else {
                    labels.push('@hourItem.time.ToString().Substring(11)');
                }
            </text>
            <text>temperatures.push(@hourItem.temp_c.ToString(CultureInfo.InvariantCulture));</text>
            <text>precip_mm.push(@hourItem.precip_mm.ToString(CultureInfo.InvariantCulture));</text>
        }
    }

    console.log(labels); // Dodaj to, aby sprawdzić, co jest w tablicach
    console.log(temperatures);

    var ctx = document.getElementById('temperatureChart').getContext('2d');
    var mixedChart = new Chart(ctx, {
        type: 'bar', // Typ główny wykresu
        data: {
            labels: labels,
            datasets: [
                {
                    type: 'line', // Typ dla temperatury
                    label: 'Temperatura (°C)',
                    data: temperatures,
                    borderColor: 'rgba(255, 0, 0, 1)',
                    backgroundColor: 'rgba(255, 0, 0, 0.2)',
                    borderWidth: 1,
                    yAxisID: 'y1' // Pierwsza oś Y
                },
                {
                    type: 'bar', // Typ dla opadów
                    label: 'Opady (mm)',
                    data: precip_mm,
                    borderColor: 'rgba(0, 0, 255, 1)',
                    backgroundColor: 'rgba(0, 0, 255, 0.2)',
                    borderWidth: 1,
                    yAxisID: 'y2' // Druga oś Y
                }
            ]
        },
        options: {
            scales: {
                y1: { // Pierwsza oś Y (dla temperatury)
                    beginAtZero: true,
                    position: 'left',
                    title: {
                        display: true,
                        text: 'Temperatura (°C)'
                    }
                },
                y2: { // Druga oś Y (dla opadów)
                    beginAtZero: true,
                    position: 'right',
                    title: {
                        display: true,
                        text: 'Opady (mm)'
                    },
                    grid: {
                        drawOnChartArea: false // Ukryj siatkę dla drugiej osi Y
                    }
                }
            }
        }
    });
    </script>
}







